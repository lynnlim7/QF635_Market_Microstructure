"""migrate tables

Revision ID: c2c0eded93bb
Revises: a7da70a70001
Create Date: 2025-05-16 14:27:52.944476

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c2c0eded93bb'
down_revision: Union[str, None] = 'a7da70a70001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol'),
    schema='trading_app'
    )
    op.create_index('ix_asset_symbol_hash', 'assets', ['symbol'], unique=False, schema='trading_app', postgresql_using='hash')
    op.create_table('exposures',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Numeric(precision=38, scale=10), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['trading_app.assets.id'], ),
    sa.PrimaryKeyConstraint('position_id'),
    schema='trading_app'
    )
    op.create_table('futures_pairs',
    sa.Column('coin_m', sa.Boolean(), nullable=False),
    sa.Column('mark_price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('delivery_date', sa.DateTime(), nullable=True),
    sa.Column('onboard_date', sa.DateTime(), nullable=True),
    sa.Column('funding_rate', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pair_symbol', sa.String(), nullable=False),
    sa.Column('base_asset_id', sa.Integer(), nullable=False),
    sa.Column('quote_asset_id', sa.Integer(), nullable=False),
    sa.Column('base_asset_precision', sa.Integer(), nullable=True),
    sa.Column('quote_asset_precision', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('tick_size', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('min_lot_size', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('max_lot_size', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('min_order_price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('max_order_price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.ForeignKeyConstraint(['base_asset_id'], ['trading_app.assets.id'], ),
    sa.ForeignKeyConstraint(['quote_asset_id'], ['trading_app.assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pair_symbol'),
    schema='trading_app'
    )
    op.create_index('ix_futures_pair_symbol_hash', 'futures_pairs', ['pair_symbol'], unique=False, schema='trading_app', postgresql_using='hash')
    op.create_table('spot_pairs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pair_symbol', sa.String(), nullable=False),
    sa.Column('base_asset_id', sa.Integer(), nullable=False),
    sa.Column('quote_asset_id', sa.Integer(), nullable=False),
    sa.Column('base_asset_precision', sa.Integer(), nullable=True),
    sa.Column('quote_asset_precision', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('tick_size', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('min_lot_size', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('max_lot_size', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('min_order_price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('max_order_price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.ForeignKeyConstraint(['base_asset_id'], ['trading_app.assets.id'], ),
    sa.ForeignKeyConstraint(['quote_asset_id'], ['trading_app.assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pair_symbol'),
    schema='trading_app'
    )
    op.create_index('ix_spot_pair_symbol_hash', 'spot_pairs', ['pair_symbol'], unique=False, schema='trading_app', postgresql_using='hash')
    op.create_table('spot_portfolio',
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Numeric(precision=38, scale=10), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['trading_app.assets.id'], ),
    sa.PrimaryKeyConstraint('position_id'),
    sa.UniqueConstraint('asset_id'),
    schema='trading_app'
    )
    op.create_table('futures_orders',
    sa.Column('leverage', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pair_id', sa.Integer(), nullable=False),
    sa.Column('filled', sa.Numeric(precision=38, scale=10), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('limit_price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('filled_price', sa.Numeric(precision=38, scale=10), nullable=False),
    sa.Column('amount', sa.Numeric(precision=38, scale=10), nullable=False),
    sa.Column('side', postgresql.ENUM('BUY', 'SELL', name='orderside', schema='trading_app', create_type=False), nullable=False),
    sa.Column('time_in_force', postgresql.ENUM('GTC', 'IOC', 'FOK', 'GTX', 'GTD', name='ordertimeinforce', schema='trading_app', create_type=False), nullable=True),
    sa.Column('status', postgresql.ENUM('OPEN', 'PENDING', 'PARTIALLY_FILLED', 'FILLED', 'REJECTED', 'EXPIRED', name='orderstatus', schema='trading_app', create_type=False), nullable=False),
    sa.Column('type', postgresql.ENUM('LIMIT', 'MARKET', 'STOP_LOSS', 'STOP_LIMIT', 'TAKE_PROFIT', 'TAKE_PROFIT_LIMIT', 'LIMIT_MAKER', 'OCO', 'STOP', 'STOP_MARKET', 'TAKE_PROFIT_MARKET', 'TRAILING_STOP_MARKET', name='ordertype', schema='trading_app', create_type=False), nullable=True),
    sa.Column('closed_time', sa.DateTime(), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pair_id'], ['trading_app.futures_pairs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='trading_app'
    )
    op.create_table('futures_portfolio',
    sa.Column('pair_id', sa.Integer(), nullable=False),
    sa.Column('average_price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('leverage', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('position_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Numeric(precision=38, scale=10), nullable=False),
    sa.ForeignKeyConstraint(['pair_id'], ['trading_app.futures_pairs.id'], ),
    sa.PrimaryKeyConstraint('position_id'),
    schema='trading_app'
    )
    op.create_table('spot_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pair_id', sa.Integer(), nullable=False),
    sa.Column('filled', sa.Numeric(precision=38, scale=10), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('limit_price', sa.Numeric(precision=38, scale=10), nullable=True),
    sa.Column('filled_price', sa.Numeric(precision=38, scale=10), nullable=False),
    sa.Column('amount', sa.Numeric(precision=38, scale=10), nullable=False),
    sa.Column('side', postgresql.ENUM('BUY', 'SELL', name='orderside', schema='trading_app', create_type=False), nullable=False),
    sa.Column('time_in_force', postgresql.ENUM('GTC', 'IOC', 'FOK', 'GTX', 'GTD', name='ordertimeinforce', schema='trading_app', create_type=False), nullable=True),
    sa.Column('status', postgresql.ENUM('OPEN', 'PENDING', 'PARTIALLY_FILLED', 'FILLED', 'REJECTED', 'EXPIRED', name='orderstatus', schema='trading_app', create_type=False), nullable=False),
    sa.Column('type', postgresql.ENUM('LIMIT', 'MARKET', 'STOP_LOSS', 'STOP_LIMIT', 'TAKE_PROFIT', 'TAKE_PROFIT_LIMIT', 'LIMIT_MAKER', 'OCO', 'STOP', 'STOP_MARKET', 'TAKE_PROFIT_MARKET', 'TRAILING_STOP_MARKET', name='ordertype', schema='trading_app', create_type=False), nullable=True),
    sa.Column('closed_time', sa.DateTime(), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pair_id'], ['trading_app.futures_pairs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='trading_app'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('spot_orders', schema='trading_app')
    op.drop_table('futures_portfolio', schema='trading_app')
    op.drop_table('futures_orders', schema='trading_app')
    op.drop_table('spot_portfolio', schema='trading_app')
    op.drop_index('ix_spot_pair_symbol_hash', table_name='spot_pairs', schema='trading_app', postgresql_using='hash')
    op.drop_table('spot_pairs', schema='trading_app')
    op.drop_index('ix_futures_pair_symbol_hash', table_name='futures_pairs', schema='trading_app', postgresql_using='hash')
    op.drop_table('futures_pairs', schema='trading_app')
    op.drop_table('exposures', schema='trading_app')
    op.drop_index('ix_asset_symbol_hash', table_name='assets', schema='trading_app', postgresql_using='hash')
    op.drop_table('assets', schema='trading_app')
    # ### end Alembic commands ###
