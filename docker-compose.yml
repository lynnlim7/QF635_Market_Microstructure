services:

  redis:
    image: redis:latest
    ports: 
      - "6379:6379"
    restart: always
    cpuset: "3"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  postgres: 
    image: timescale/timescaledb:latest-pg17
    ports:
      - "5432:5432"
    mem_limit: 512M
    env_file:
      - .env
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf

    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${APP_PG_USER}", "-d", "${APP_PG_DB}" ]
      interval: 5s
      retries: 5

  trading-bot:
    build:
      context: .
    command: ["bash", "entrypoint.sh"]
    depends_on:
      redis :
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file:
      - .env
    cpuset: "1"

  backtesting:
    build:
      context: .
    command: ["bash", "entrypoint.sh"]
    depends_on:
      redis :
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      IS_SIMULATION: "true"
    ports:
      - "8080:8080"
    env_file:
      - .env
    cpuset: "1"

volumes:
  redis_data:
