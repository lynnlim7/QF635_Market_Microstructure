services:

  redis:
    image: redis:latest
    ports: 
      - "6379:6379"
    restart: always
    cpuset: "3"
#    network_mode: host
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  postgres: 
    image: timescale/timescaledb:latest-pg17
    ports:
      - "5432:5432"
    mem_limit: 512M
    env_file:
      - .env
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${APP_PG_USER}", "-d", "${APP_PG_DB}" ]
      interval: 5s
      retries: 5

#   db-migrator:
#     build:
#       context: .
#     command: ["./db/migrate.sh"]
#     depends_on:
#       postgres:
#         condition: service_healthy
#     env_file:
#       - .env
#     restart: "no"

#   trading-bot:
#     build:
#       context: .
#     command: ["python3", "app/main.py"]
#     depends_on:
#       - redis
# #    network_mode: host
#     ports:
#       - "8080:8080"
#     env_file:
#       - .env
#     cpuset: "1"

volumes:
  redis_data:
